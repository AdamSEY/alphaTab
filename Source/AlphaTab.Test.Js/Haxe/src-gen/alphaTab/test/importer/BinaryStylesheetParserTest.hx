package alphaTab.test.importer;

using system.HaxeExtensions;
@:testClass
class BinaryStylesheetParserTest
{
    public function Load(name : system.CsString) : system.ByteArray 
    {
        var path : system.CsString = "TestFiles/";
        return alphaTab.test.TestPlatform.LoadFile(path + name);

    }

    @:testMethod
    public function TestRead() : Void 
    {
        var readerBase : alphaTab.importer.BinaryStylesheetParser = new alphaTab.importer.BinaryStylesheetParser();
        readerBase.Parse(Load("GuitarPro7/BinaryStylesheet"));
        var stylesheet : alphaTab.importer.BinaryStylesheet = readerBase.Stylesheet;
        //foreach (var r in stylesheet.Raw)
        //{
        //    Console.WriteLine("Assert.IsTrue(stylesheet.Raw.ContainsKey(\"" + r + "\"));");
        //    var v = stylesheet.Raw[r];
        //    if (v is string s)
        //    {
        //        Console.WriteLine("Assert.AreEqual(\"" + s + "\", stylesheet.Raw[\"" + r + "\"]);");
        //    }
        //    else if (v is bool b)
        //    {
        //        Console.WriteLine("Assert.AreEqual(" + b.ToString().ToLower() + ", stylesheet.Raw[\"" + r + "\"]);");
        //    }
        //    else if (v is float f)
        //    {
        //        Console.WriteLine("Assert.IsTrue(((float)stylesheet.Raw[\"" + r + "\"]).IsAlmostEqualTo(" + f.ToString("F9", CultureInfo.InvariantCulture) + "f));");
        //    }
        //    else if (v is BendPoint bp)
        //    {
        //        Console.WriteLine("Assert.AreEqual(" + bp.Offset + ", ((BendPoint)stylesheet.Raw[\"" + r + "\"]).Offset);");
        //        Console.WriteLine("Assert.AreEqual(" + bp.Value + ", ((BendPoint)stylesheet.Raw[\"" + r + "\"]).Value);");
        //    }
        //    else if (v is Color c)
        //    {
        //        Console.WriteLine("Assert.AreEqual(" + c.R + ", ((Color)stylesheet.Raw[\"" + r + "\"]).R);");
        //        Console.WriteLine("Assert.AreEqual(" + c.G + ", ((Color)stylesheet.Raw[\"" + r + "\"]).G);");
        //        Console.WriteLine("Assert.AreEqual(" + c.B + ", ((Color)stylesheet.Raw[\"" + r + "\"]).B);");
        //        Console.WriteLine("Assert.AreEqual(" + c.A + ", ((Color)stylesheet.Raw[\"" + r + "\"]).A);");
        //    }
        //    else if (v is Bounds bd)
        //    {
        //        Console.WriteLine("Assert.AreEqual(" + bd.X + ", ((Bounds)stylesheet.Raw[\"" + r + "\"]).X);");
        //        Console.WriteLine("Assert.AreEqual(" + bd.Y + ", ((Bounds)stylesheet.Raw[\"" + r + "\"]).Y);");
        //        Console.WriteLine("Assert.AreEqual(" + bd.W + ", ((Bounds)stylesheet.Raw[\"" + r + "\"]).W);");
        //        Console.WriteLine("Assert.AreEqual(" + bd.H + ", ((Bounds)stylesheet.Raw[\"" + r + "\"]).H);");
        //    }
        //    else
        //    {
        //        Console.WriteLine("Assert.AreEqual(" + stylesheet.Raw[r] + ", stylesheet.Raw[\"" + r + "\"]);");
        //    }
        //    Console.WriteLine();
        //}
        alphaTab.test.Assert.IsNotNull(stylesheet);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/chordNameStyle"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Global/chordNameStyle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/deadNoteSymbol"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("StandardNotation/deadNoteSymbol"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/WordsAndMusic"));
        alphaTab.test.Assert.AreEqual_T1_T22("Words & Music by %MUSIC%", stylesheet.Raw.get_Item("Header/WordsAndMusic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/PickStrokePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1100, stylesheet.Raw.get_Item("Global/PickStrokePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/drawOddFooter"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Odd/drawOddFooter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/tabRhythmPlacementVoice3"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("TablatureNotation/tabRhythmPlacementVoice3"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/HideTupletBracket"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/HideTupletBracket"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/DrawChords"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/DrawChords"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/codaSplitWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/codaSplitWidth"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/HarmonicPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2200, stylesheet.Raw.get_Item("Global/HarmonicPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/LetRingThroughoutPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2500, stylesheet.Raw.get_Item("Global/LetRingThroughoutPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/stretchFactor"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/stretchFactor"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/bendHeight"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/bendHeight"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/ChordDiagramPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3000, stylesheet.Raw.get_Item("Global/ChordDiagramPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/AlternateEndingPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2800, stylesheet.Raw.get_Item("Global/AlternateEndingPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieOffsetX"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieOffsetX"))), 0.104999500));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/PalmMutePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1200, stylesheet.Raw.get_Item("Global/PalmMutePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/hideLyrics"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/hideLyrics"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/drawArpeggioArrow"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/drawArpeggioArrow"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/HoPoPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(800, stylesheet.Raw.get_Item("Global/HoPoPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/repeatWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Staff/repeatWidth"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bracketWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/bracketWidth"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningSpaceInFrontOfStaff"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/TuningSpaceInFrontOfStaff"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/drawWholeRestOnEmptyBars"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("StandardNotation/drawWholeRestOnEmptyBars"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/miniBrowserPosition"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/miniBrowserPosition"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/hideUselessRests"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("StandardNotation/hideUselessRests"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SpacingAffectFontsSize"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/SpacingAffectFontsSize"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/drawEvenCopyright"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Even/drawEvenCopyright"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/RepeatTargetPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3300, stylesheet.Raw.get_Item("Global/RepeatTargetPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SVGFont"));
        alphaTab.test.Assert.AreEqual_T1_T22(":/renderer/resources/notes.svg", stylesheet.Raw.get_Item("Global/SVGFont"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/PageNumberAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Footer/PageNumberAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/graceFlatScaleFactor"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/graceFlatScaleFactor"))), 0.833328200));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/shadowColorEnd"));
        alphaTab.test.Assert.AreEqual_T1_T22(90, (cast(stylesheet.Raw.get_Item("Global/shadowColorEnd"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(90, (cast(stylesheet.Raw.get_Item("Global/shadowColorEnd"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(90, (cast(stylesheet.Raw.get_Item("Global/shadowColorEnd"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(10, (cast(stylesheet.Raw.get_Item("Global/shadowColorEnd"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenCopyright"));
        alphaTab.test.Assert.AreEqual_T1_T22("%COPYRIGHT%", stylesheet.Raw.get_Item("Even/EvenCopyright"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/GolpePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(350, stylesheet.Raw.get_Item("Global/GolpePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/spaceSizeMM"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/spaceSizeMM"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/drawSecondNoteTrill"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("TablatureNotation/drawSecondNoteTrill"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/insertSize"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("System/insertSize"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/minimalInformationForHarmonic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("TablatureNotation/minimalInformationForHarmonic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pageTopMargin"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pageTopMargin"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/augmentationDotRadius"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/augmentationDotRadius"))), 0.125000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/drawOddCopyright"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Odd/drawOddCopyright"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/forceRhythmicBand"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/forceRhythmicBand"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/codaSplit"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/codaSplit"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieMaxHeight"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieMaxHeight"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/WordsAndMusicAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Header/WordsAndMusicAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/drawEvenFooter"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Even/drawEvenFooter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/rightFingeringPositionSN"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("StandardNotation/rightFingeringPositionSN"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bracketCurveHeight"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/bracketCurveHeight"))), 1.600006000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/FreeTimePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2700, stylesheet.Raw.get_Item("Global/FreeTimePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/ChordSpacingMillimeter"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/ChordSpacingMillimeter"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawAlbum"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawAlbum"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/trackNameModeMulti"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("System/trackNameModeMulti"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/insertSizeSameTrack"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("System/insertSizeSameTrack"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/marginMinimalBeforeFirstNote"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/marginMinimalBeforeFirstNote"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Subtitle"));
        alphaTab.test.Assert.AreEqual_T1_T22("%SUBTITLE%", stylesheet.Raw.get_Item("Header/Subtitle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/alphaSuggested"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/alphaSuggested"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenHeaderAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Even/EvenHeaderAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TechniqueSymbol"));
        alphaTab.test.Assert.AreEqual_T1_T22(25, stylesheet.Raw.get_Item("Global/TechniqueSymbol"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/tuningBoxed"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/tuningBoxed"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/drawBends"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("StandardNotation/drawBends"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/mouseClickMaxTime"));
        alphaTab.test.Assert.AreEqual_T1_T22(200, stylesheet.Raw.get_Item("Global/mouseClickMaxTime"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/graceSharpScaleFactor"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/graceSharpScaleFactor"))), 1.333344000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/GrayedOpacity"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/GrayedOpacity"))), 0.400001500));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/WhammyBarVibratoPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1400, stylesheet.Raw.get_Item("Global/WhammyBarVibratoPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/noStaffLineForSlashs"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/noStaffLineForSlashs"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/forceHorizontalBeam"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("StandardNotation/forceHorizontalBeam"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/drawTimeSignatureC"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Staff/drawTimeSignatureC"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/colorizeFretNumberInTablature"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/colorizeFretNumberInTablature"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddHeaderAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Odd/OddHeaderAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/tabRhythmPlacementVoice1"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("TablatureNotation/tabRhythmPlacementVoice1"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawTitle"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawTitle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Words"));
        alphaTab.test.Assert.AreEqual_T1_T22("Words by %WORDS%", stylesheet.Raw.get_Item("Header/Words"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/MusicAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Header/MusicAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/OctavePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1800, stylesheet.Raw.get_Item("Global/OctavePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/deadNoteLetter"));
        alphaTab.test.Assert.AreEqual_T1_T22(88, stylesheet.Raw.get_Item("TablatureNotation/deadNoteLetter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenCopyrightAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Even/EvenCopyrightAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddCopyrightAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Odd/OddCopyrightAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/BeamsInsideStaff"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/BeamsInsideStaff"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/showTrackNameMulti"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/showTrackNameMulti"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/renderingStyleMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/renderingStyleMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/LyricPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2450, stylesheet.Raw.get_Item("Global/LyricPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/widgetWaitTime"));
        alphaTab.test.Assert.AreEqual_T1_T22(750, stylesheet.Raw.get_Item("Global/widgetWaitTime"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pageOrientation"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("PageSetup/pageOrientation"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bracketExtendMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("System/bracketExtendMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenFooter"));
        alphaTab.test.Assert.AreEqual_T1_T22("%PAGE%/%PAGES%", stylesheet.Raw.get_Item("Even/EvenFooter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemLineWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemLineWidth"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/CapoPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2600, stylesheet.Raw.get_Item("Global/CapoPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/backgroundColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(99, (cast(stylesheet.Raw.get_Item("Global/backgroundColor"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(104, (cast(stylesheet.Raw.get_Item("Global/backgroundColor"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(101, (cast(stylesheet.Raw.get_Item("Global/backgroundColor"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(255, (cast(stylesheet.Raw.get_Item("Global/backgroundColor"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/drawLyricsUpside"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/drawLyricsUpside"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Tabber"));
        alphaTab.test.Assert.AreEqual_T1_T22("Tabbed by %TABBER%", stylesheet.Raw.get_Item("Header/Tabber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenCopyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22("All Rights Reserved - International Copyright Secured", stylesheet.Raw.get_Item("Even/EvenCopyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/strictOrDirectedIsSystemWide"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/strictOrDirectedIsSystemWide"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddCopyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22("All Rights Reserved - International Copyright Secured", stylesheet.Raw.get_Item("Odd/OddCopyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieWeight"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieWeight"))), 0.174999200));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/fingeringMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Staff/fingeringMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/horizontalTrackNameOnFirstSystem"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/horizontalTrackNameOnFirstSystem"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/chordMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/chordMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/firstSystemMarginMillimeter"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/firstSystemMarginMillimeter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/drawChordInScore"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/drawChordInScore"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/slashStemDown"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/slashStemDown"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemMinYDeviation"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemMinYDeviation"))), 0.699996900));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/AlbumAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Header/AlbumAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/ledgerLineSize"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/ledgerLineSize"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/cursorInsertSize"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Global/cursorInsertSize"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/drawCopyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Footer/drawCopyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/placementMargin"));
        alphaTab.test.Assert.AreEqual_T1_T22(40, stylesheet.Raw.get_Item("Global/placementMargin"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Title"));
        alphaTab.test.Assert.AreEqual_T1_T22("%TITLE%", stylesheet.Raw.get_Item("Header/Title"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/BarNumberStyle"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/BarNumberStyle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddCopyright"));
        alphaTab.test.Assert.AreEqual_T1_T22("%COPYRIGHT%", stylesheet.Raw.get_Item("Odd/OddCopyright"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/leftFingeringPositionTAB"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("TablatureNotation/leftFingeringPositionTAB"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/accidentalSpaceAfter"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/accidentalSpaceAfter"))), 0.400001500));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/WhammyBarPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2300, stylesheet.Raw.get_Item("Global/WhammyBarPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/showTrackNameSingle"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/showTrackNameSingle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/rightFingeringPositionTAB"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("TablatureNotation/rightFingeringPositionTAB"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/WahPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(600, stylesheet.Raw.get_Item("Global/WahPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/tabRhythmPlacementVoice4"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("TablatureNotation/tabRhythmPlacementVoice4"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemSecondariesSpace"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemSecondariesSpace"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TempoPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3600, stylesheet.Raw.get_Item("Global/TempoPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pageRightMargin"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pageRightMargin"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/flagsSpacing"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/flagsSpacing"))), 1.600006000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/horizontalTrackNameOnOtherSystems"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/horizontalTrackNameOnOtherSystems"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TripletFeelPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3500, stylesheet.Raw.get_Item("Global/TripletFeelPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/alignNotes"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("StandardNotation/alignNotes"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pagePortraitWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pagePortraitWidth"))), 128.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/shortTrackNameOnFirstSystem"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/shortTrackNameOnFirstSystem"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/circleAroundHalfAndWhole"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("TablatureNotation/circleAroundHalfAndWhole"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemLineSize"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemLineSize"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/forceHorizontalBeamForDrums"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("StandardNotation/forceHorizontalBeamForDrums"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pagePortraitHeight"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pagePortraitHeight"))), 256.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/FermataPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2400, stylesheet.Raw.get_Item("Global/FermataPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/drawEvenCopyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Even/drawEvenCopyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SlapPopPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1700, stylesheet.Raw.get_Item("Global/SlapPopPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawSubtitle"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawSubtitle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/AccentPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(100, stylesheet.Raw.get_Item("Global/AccentPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Slash/displayFretStringOfSingleNotesInSlash"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Slash/displayFretStringOfSingleNotesInSlash"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/enable"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Even/enable"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/tupletMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Staff/tupletMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/accidentalSpaceBefore"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/accidentalSpaceBefore"))), 0.300003100));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/pageColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(245, (cast(stylesheet.Raw.get_Item("Global/pageColor"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(245, (cast(stylesheet.Raw.get_Item("Global/pageColor"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(245, (cast(stylesheet.Raw.get_Item("Global/pageColor"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(255, (cast(stylesheet.Raw.get_Item("Global/pageColor"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/drawOddHeader"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Odd/drawOddHeader"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/showTupletDenominator"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Staff/showTupletDenominator"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/TabberAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Header/TabberAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pageScale"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pageScale"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SoundbankChangePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3250, stylesheet.Raw.get_Item("Global/SoundbankChangePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/shadowColorBegin"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, (cast(stylesheet.Raw.get_Item("Global/shadowColorBegin"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(0, (cast(stylesheet.Raw.get_Item("Global/shadowColorBegin"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(0, (cast(stylesheet.Raw.get_Item("Global/shadowColorBegin"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(255, (cast(stylesheet.Raw.get_Item("Global/shadowColorBegin"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/ArtistAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Header/ArtistAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/Copyright"));
        alphaTab.test.Assert.AreEqual_T1_T22("%COPYRIGHT%", stylesheet.Raw.get_Item("Footer/Copyright"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/marginAfterLastNote"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/marginAfterLastNote"))), 0.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddFooter"));
        alphaTab.test.Assert.AreEqual_T1_T22("%PAGE%/%PAGES%", stylesheet.Raw.get_Item("Odd/OddFooter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawWords"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawWords"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/useSystemSignSeparator"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/useSystemSignSeparator"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/leftFingeringPositionSN"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("StandardNotation/leftFingeringPositionSN"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/ChordSizeMillimeter"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/ChordSizeMillimeter"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/LeftHandTapPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1650, stylesheet.Raw.get_Item("Global/LeftHandTapPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/staffLinesColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(180, (cast(stylesheet.Raw.get_Item("Staff/staffLinesColor"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(180, (cast(stylesheet.Raw.get_Item("Staff/staffLinesColor"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(180, (cast(stylesheet.Raw.get_Item("Staff/staffLinesColor"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(255, (cast(stylesheet.Raw.get_Item("Staff/staffLinesColor"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/PageNumber"));
        alphaTab.test.Assert.AreEqual_T1_T22("%PAGE%/%PAGES%", stylesheet.Raw.get_Item("Footer/PageNumber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/LeftFingeringPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(175, stylesheet.Raw.get_Item("Global/LeftFingeringPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/extendRhythmicInTablature"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("TablatureNotation/extendRhythmicInTablature"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningSpacingMillimeter"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/TuningSpacingMillimeter"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/ShowBeamsForRest"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/ShowBeamsForRest"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawWordsAndMusic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawWordsAndMusic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/unselectedVoiceOpacity"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("TablatureNotation/unselectedVoiceOpacity"))), 0.400001500));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/HairpinPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(400, stylesheet.Raw.get_Item("Global/HairpinPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SlashFretStringPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3050, stylesheet.Raw.get_Item("Global/SlashFretStringPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawTabber"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Header/drawTabber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/debugger"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/debugger"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bendMinimalWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/bendMinimalWidth"))), 0.100000400));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemLineSizeMinimum"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemLineSizeMinimum"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/noBarLineForSlashs"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/noBarLineForSlashs"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/sameSizeForAllBars"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/sameSizeForAllBars"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/hideGlobalTempo"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/hideGlobalTempo"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bracketCurveWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/bracketCurveWidth"))), 6.400024000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/DisplayTuning"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/DisplayTuning"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TimerPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3100, stylesheet.Raw.get_Item("Global/TimerPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/GuitarStringNumberPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(700, stylesheet.Raw.get_Item("Global/GuitarStringNumberPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/cursorMultipleSelectionBorderColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(169, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionBorderColor"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(179, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionBorderColor"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(141, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionBorderColor"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(255, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionBorderColor"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/LeftHandVibratoPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1500, stylesheet.Raw.get_Item("Global/LeftHandVibratoPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/FreeTextPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3200, stylesheet.Raw.get_Item("Global/FreeTextPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieOffsetY"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieOffsetY"))), 0.125000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/drawOddCopyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Odd/drawOddCopyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemMaxYDeviation"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemMaxYDeviation"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/trackNameModeSingle"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("System/trackNameModeSingle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TrillPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1900, stylesheet.Raw.get_Item("Global/TrillPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/barLinesColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(100, (cast(stylesheet.Raw.get_Item("Staff/barLinesColor"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(100, (cast(stylesheet.Raw.get_Item("Staff/barLinesColor"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(100, (cast(stylesheet.Raw.get_Item("Staff/barLinesColor"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(255, (cast(stylesheet.Raw.get_Item("Staff/barLinesColor"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/OrnamentPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2100, stylesheet.Raw.get_Item("Global/OrnamentPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bracketBetweenNSAndTab"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/bracketBetweenNSAndTab"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/Copyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22("All Rights Reserved - International Copyright Secured", stylesheet.Raw.get_Item("Footer/Copyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SectionPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3400, stylesheet.Raw.get_Item("Global/SectionPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieMinHeight"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieMinHeight"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/translateTunings"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/translateTunings"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/RightFingeringPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(150, stylesheet.Raw.get_Item("Global/RightFingeringPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/accidentalIntersSpacing"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/accidentalIntersSpacing"))), 0.026249890));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/RepeatCountPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(300, stylesheet.Raw.get_Item("Global/RepeatCountPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/repeatSpace"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Staff/repeatSpace"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TapPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1600, stylesheet.Raw.get_Item("Global/TapPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/LetRingPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1250, stylesheet.Raw.get_Item("Global/LetRingPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Album"));
        alphaTab.test.Assert.AreEqual_T1_T22("%ALBUM%", stylesheet.Raw.get_Item("Header/Album"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/marginBeforeFirstNote"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/marginBeforeFirstNote"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieHeightExpansion"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieHeightExpansion"))), 0.125000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningPosition"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/TuningPosition"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/shortTrackNameOnOtherSystems"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/shortTrackNameOnOtherSystems"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/forceBarCountBySystem"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/forceBarCountBySystem"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/barIndexDrawType"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("System/barIndexDrawType"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/ChordMarginMillimeter"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/ChordMarginMillimeter"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/showCapoRelative"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/showCapoRelative"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddFooterAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Odd/OddFooterAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/DynamicPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(200, stylesheet.Raw.get_Item("Global/DynamicPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemPartialSecondarySize"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemPartialSecondarySize"))), 0.699996900));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/widgetTransitionTime"));
        alphaTab.test.Assert.AreEqual_T1_T22(500, stylesheet.Raw.get_Item("Global/widgetTransitionTime"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/inScoreChordSize"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("System/inScoreChordSize"))), 11.199950000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/hideMultipleTiedNotes"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Staff/hideMultipleTiedNotes"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/beamLineWidth"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/beamLineWidth"))), 0.400001500));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/textTransitionTime"));
        alphaTab.test.Assert.AreEqual_T1_T22(500, stylesheet.Raw.get_Item("Global/textTransitionTime"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/displayBeamsOnRestInTablature"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/displayBeamsOnRestInTablature"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/BarrePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2900, stylesheet.Raw.get_Item("Global/BarrePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/FadePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(1300, stylesheet.Raw.get_Item("Global/FadePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/TitleAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Header/TitleAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenHeader"));
        alphaTab.test.Assert.AreEqual_T1_T22("%TITLE% by %ARTIST%", stylesheet.Raw.get_Item("Even/EvenHeader"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/tabRhythmPlacementVoice2"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("TablatureNotation/tabRhythmPlacementVoice2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/stemLineSizeMaximum"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/stemLineSizeMaximum"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/showClefAtEachSystemStart"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/showClefAtEachSystemStart"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawArtist"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawArtist"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningMarginMillimeter"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/TuningMarginMillimeter"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/drawMusic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/drawMusic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/maxBendExpansionFactor"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("TablatureNotation/maxBendExpansionFactor"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/spaceSizePixel"));
        alphaTab.test.Assert.AreEqual_T1_T22(5, stylesheet.Raw.get_Item("Global/spaceSizePixel"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/leftFingeringMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Staff/leftFingeringMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningColumnCount"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Global/TuningColumnCount"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pageBottomMargin"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pageBottomMargin"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/showTiedNotesLikeGhostNotes"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("TablatureNotation/showTiedNotesLikeGhostNotes"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/noteHeadColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("StandardNotation/noteHeadColor"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/barCountBySystem"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Global/barCountBySystem"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/SlidePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(850, stylesheet.Raw.get_Item("Global/SlidePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Music"));
        alphaTab.test.Assert.AreEqual_T1_T22("Music by %MUSIC%", stylesheet.Raw.get_Item("Header/Music"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/drawCopyright"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Footer/drawCopyright"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningDisplayMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Global/TuningDisplayMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/PickScrapePriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(875, stylesheet.Raw.get_Item("Global/PickScrapePriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/allowMultirests"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/allowMultirests"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("PageSetup/pageLeftMargin"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("PageSetup/pageLeftMargin"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Artist"));
        alphaTab.test.Assert.AreEqual_T1_T22("%ARTIST%", stylesheet.Raw.get_Item("Header/Artist"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/hopoMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Staff/hopoMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/drawEvenHeader"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Even/drawEvenHeader"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/TuningMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(4, stylesheet.Raw.get_Item("Global/TuningMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/hideDynamics"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("StandardNotation/hideDynamics"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/RasgueadoPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(2000, stylesheet.Raw.get_Item("Global/RasgueadoPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/graceNoteScaleFactor"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/graceNoteScaleFactor"))), 0.899993900));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/cursorMultipleSelectionInnerColor"));
        alphaTab.test.Assert.AreEqual_T1_T22(116, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionInnerColor"))).R);
        alphaTab.test.Assert.AreEqual_T1_T22(117, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionInnerColor"))).G);
        alphaTab.test.Assert.AreEqual_T1_T22(112, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionInnerColor"))).B);
        alphaTab.test.Assert.AreEqual_T1_T22(50, (cast(stylesheet.Raw.get_Item("Global/cursorMultipleSelectionInnerColor"))).A);
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/tieCurve"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("StandardNotation/tieCurve"))), 0.125000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("StandardNotation/translatedTuningImpactNotation"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("StandardNotation/translatedTuningImpactNotation"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/RepeatJumpPriority"));
        alphaTab.test.Assert.AreEqual_T1_T22(3300, stylesheet.Raw.get_Item("Global/RepeatJumpPriority"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/SubtitleAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Header/SubtitleAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Even/EvenFooterAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Even/EvenFooterAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/WordsAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("Header/WordsAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/drawSlOnSlides"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Staff/drawSlOnSlides"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/ExtendedBarLines"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/ExtendedBarLines"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/drawPageNumber"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Footer/drawPageNumber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Odd/OddHeader"));
        alphaTab.test.Assert.AreEqual_T1_T22("%TITLE% by %ARTIST%", stylesheet.Raw.get_Item("Odd/OddHeader"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/fontSizeAdjustment"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/fontSizeAdjustment"))), 0.419998200));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Footer/CopyrightAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Footer/CopyrightAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/rhythmPower"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/rhythmPower"))), 0.500000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Lyric/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Lyric/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Album/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Album/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/VerticalTrackName/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/VerticalTrackName/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionText/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/DirectionText/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/showTrackNameOnFirstSystem"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/showTrackNameOnFirstSystem"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawWords"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawWords"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fingerings/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Fingerings/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuplet/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tuplet/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/LetRing/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/LetRing/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackShortName/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/TrackShortName/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Title/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Title/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PalmMute/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/PalmMute/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Big/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Big/size"))), 3.600037000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HorizontalTrackName/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/HorizontalTrackName/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenCopyright/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenCopyright/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AutoLetRing/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/AutoLetRing/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SmallFret/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/SmallFret/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slide/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Slide/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionText/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/DirectionText/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenFooter/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenFooter/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Barre/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Barre/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Chord/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Chord/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fingerings/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Fingerings/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Copyright1Alignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Header/Copyright1Alignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BarIndex/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/BarIndex/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuplet/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Tuplet/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright1/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright1/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fret/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Fret/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretString/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SlashFretString/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/LetRing/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/LetRing/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Album/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Album/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Normal/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Normal/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Subtitle/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Subtitle/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuning/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Tuning/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright1/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Copyright1/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Album/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Album/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright2/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright2/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionText/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/DirectionText/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/WordsAndMusic/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/WordsAndMusic/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddFooter/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddFooter/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Multirest/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Multirest/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PageNumber/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/PageNumber/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawCopyright1"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawCopyright1"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tabber/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tabber/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tiny/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Tiny/size"))), 2.799988000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuning/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tuning/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Timer/border"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Timer/border"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BarIndex/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/BarIndex/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Title/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Title/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionGlyph/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/DirectionGlyph/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright2/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright2/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tiny/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tiny/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tempo/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Tempo/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Big/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Big/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Chord/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Chord/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PageNumber/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/PageNumber/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BarIndex/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/BarIndex/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretString/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/SlashFretString/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HarmonicText/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/HarmonicText/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fret/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Fret/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Chord/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Chord/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Section/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Section/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenFooter/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/EvenFooter/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddFooter/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddFooter/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SmallFret/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/SmallFret/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackShortName/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/TrackShortName/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PalmMute/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/PalmMute/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tempo/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tempo/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Artist/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Artist/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Album/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Album/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeTime/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/FreeTime/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuning/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tuning/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Lyric/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Lyric/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PalmMute/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/PalmMute/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackName/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/TrackName/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddHeader/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddHeader/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Music/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Music/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/RepeatBarCount/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/RepeatBarCount/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Copyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22("%COPYRIGHT2%", stylesheet.Raw.get_Item("Header/Copyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BigBold/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/BigBold/size"))), 14.400150000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Capo/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Capo/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawCopyright2"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawCopyright2"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slide/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Slide/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuning/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tuning/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Copyright/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenHeader/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/EvenHeader/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HarmonicText/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HarmonicText/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Capo/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Capo/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slide/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Slide/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BarIndex/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/BarIndex/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenHeader/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenHeader/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tempo/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tempo/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddHeader/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddHeader/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Section/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Section/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright2/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright2/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/WordsAndMusic/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/WordsAndMusic/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Small/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Small/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Words/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Words/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Barre/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Barre/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/cursorMultilpeSelectionMargin"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Global/cursorMultilpeSelectionMargin"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AutoLetRing/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/AutoLetRing/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fingerings/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Fingerings/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Rasgueado/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Rasgueado/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Copyright2Alignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(1, stylesheet.Raw.get_Item("Header/Copyright2Alignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Music/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Music/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddCopyright/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddCopyright/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/bracketExtendByFamily"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/bracketExtendByFamily"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tiny/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tiny/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Huge/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Huge/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Rasgueado/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Rasgueado/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Words/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Words/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddCopyright/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddCopyright/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HoPo/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HoPo/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretStringText/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SlashFretStringText/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SoundAutomation/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SoundAutomation/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SoundAutomation/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SoundAutomation/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/hideLyrics"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Staff/hideLyrics"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionGlyph/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFont()", stylesheet.Raw.get_Item("Global/Font/DirectionGlyph/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fret/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Fret/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Capo/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Capo/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddHeader/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/OddHeader/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AlternateEnding/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/AlternateEnding/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Artist/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Artist/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BendsLabel/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/BendsLabel/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionGlyph/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/DirectionGlyph/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/LetRing/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/LetRing/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HarmonicText/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HarmonicText/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SegmentLine/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/SegmentLine/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawAlbum"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawAlbum"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AlternateEnding/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/AlternateEnding/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Subtitle/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Subtitle/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackName/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/TrackName/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/WordsAndMusic/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/WordsAndMusic/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("bracketExtendMode"));
        alphaTab.test.Assert.AreEqual_T1_T22(0, stylesheet.Raw.get_Item("bracketExtendMode"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeText/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/FreeText/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Big/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Big/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/PageNumber"));
        alphaTab.test.Assert.AreEqual_T1_T22("%PAGE%/%PAGES%", stylesheet.Raw.get_Item("Header/PageNumber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Huge/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Huge/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HoPo/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/HoPo/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddHeader/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddHeader/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HoPo/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/HoPo/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AlternateEnding/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/AlternateEnding/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BendsLabel/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/BendsLabel/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Music/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Music/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeText/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/FreeText/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Timer/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Timer/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SoundAutomation/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/SoundAutomation/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Multirest/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Multirest/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/ignoreAccidentalsForPlacement"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("System/ignoreAccidentalsForPlacement"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tiny/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Tiny/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("TablatureNotation/invertFingeringPlacement"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("TablatureNotation/invertFingeringPlacement"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Barre/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Barre/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SmallFret/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SmallFret/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeText/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/FreeText/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuplet/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Tuplet/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Artist/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Artist/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SoundAutomation/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/SoundAutomation/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Words/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Words/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddFooter/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/OddFooter/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Barre/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Barre/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SegmentLine/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/SegmentLine/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Timer/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Timer/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/RepeatBarCount/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/RepeatBarCount/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tabber/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Tabber/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Small/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Small/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenFooter/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenFooter/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretString/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SlashFretString/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Multirest/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Multirest/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/WordsAndMusic/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/WordsAndMusic/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Rasgueado/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Rasgueado/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AutoLetRing/size"));
        alphaTab.test.Assert.AreEqual_T1_T22("8", stylesheet.Raw.get_Item("Global/Font/AutoLetRing/size"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Normal/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Normal/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright2/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Copyright2/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HarmonicText/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/HarmonicText/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/RepeatBarCount/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/RepeatBarCount/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("System/strictPlacementForMultivoices"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("System/strictPlacementForMultivoices"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Multirest/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFont()", stylesheet.Raw.get_Item("Global/Font/Multirest/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddFooter/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/OddFooter/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fingerings/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Fingerings/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fingerings/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Fingerings/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AutoLetRing/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/AutoLetRing/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slap/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Slap/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Music/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Music/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fret/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Fret/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Pop/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Pop/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/firstSystemMinimalMarginMillimeter"));
        alphaTab.test.Assert.AreEqual_T1_T22(20, stylesheet.Raw.get_Item("Global/firstSystemMinimalMarginMillimeter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Timer/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Timer/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tabber/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tabber/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Music/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Music/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AlternateEnding/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/AlternateEnding/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Pop/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Pop/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Huge/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Huge/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BigBold/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/BigBold/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/VerticalTrackName/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/VerticalTrackName/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddCopyright/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/OddCopyright/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenFooter/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenFooter/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/RepeatBarCount/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/RepeatBarCount/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SegmentLine/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SegmentLine/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenHeader/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/EvenHeader/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionGlyph/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/DirectionGlyph/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretString/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SlashFretString/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Chord/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Chord/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Chord/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Chord/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Words/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Words/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Subtitle/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Subtitle/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretStringText/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/SlashFretStringText/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HorizontalTrackName/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HorizontalTrackName/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BigBold/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/BigBold/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tabber/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Tabber/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SmallFret/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SmallFret/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HorizontalTrackName/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/HorizontalTrackName/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenCopyright/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenCopyright/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeTime/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/FreeTime/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionGlyph/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/DirectionGlyph/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/Copyright1"));
        alphaTab.test.Assert.AreEqual_T1_T22("%COPYRIGHT1%", stylesheet.Raw.get_Item("Header/Copyright1"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Huge/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Huge/size"))), 19.199710000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenHeader/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenHeader/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawTabber"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawTabber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawPageNumber"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawPageNumber"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slide/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Slide/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/VerticalTrackName/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/VerticalTrackName/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Lyric/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Lyric/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Fret/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Fret/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawArtist"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawArtist"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/LetRing/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/LetRing/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slap/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Slap/size"))), 4.800049000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slide/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Slide/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/RepeatBarCount/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/RepeatBarCount/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Rasgueado/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Rasgueado/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Section/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Section/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright2/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Copyright2/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawMusic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawMusic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenCopyright/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/EvenCopyright/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tempo/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Tempo/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HorizontalTrackName/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/HorizontalTrackName/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackName/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/TrackName/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SegmentLine/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SegmentLine/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeTime/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/FreeTime/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeText/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/FreeText/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeTime/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/FreeTime/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tempo/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Tempo/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HoPo/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HoPo/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Normal/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Normal/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SegmentLine/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SegmentLine/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BendsLabel/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/BendsLabel/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionText/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/DirectionText/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PalmMute/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/PalmMute/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeTime/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/FreeTime/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HorizontalTrackName/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HorizontalTrackName/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/PageNumberAlignment"));
        alphaTab.test.Assert.AreEqual_T1_T22(2, stylesheet.Raw.get_Item("Header/PageNumberAlignment"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Pop/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Pop/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Words/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Words/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright1/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright1/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BendsLabel/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/BendsLabel/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Capo/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Capo/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddCopyright/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/OddCopyright/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Title/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Title/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/LetRing/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/LetRing/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tabber/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tabber/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Capo/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Capo/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Pop/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Pop/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HoPo/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HoPo/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenFooter/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/EvenFooter/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Subtitle/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Subtitle/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawSubtitle"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawSubtitle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/VerticalTrackName/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/VerticalTrackName/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackShortName/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/TrackShortName/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuning/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Tuning/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Section/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Section/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Artist/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/Artist/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Section/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Section/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Normal/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Normal/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Barre/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Barre/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slap/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Slap/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright1/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Copyright1/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Lyric/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Lyric/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PageNumber/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/PageNumber/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/DirectionText/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/DirectionText/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenCopyright/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenCopyright/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/HarmonicText/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/HarmonicText/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Subtitle/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Subtitle/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Big/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/Big/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PageNumber/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/PageNumber/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BigBold/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/BigBold/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddHeader/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/OddHeader/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddCopyright/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddCopyright/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Timer/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Timer/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Title/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Title/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Timer/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Timer/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PalmMute/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/PalmMute/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenCopyright/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/EvenCopyright/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/firstSystemMaximalMarginMillimeter"));
        alphaTab.test.Assert.AreEqual_T1_T22(100, stylesheet.Raw.get_Item("Global/firstSystemMaximalMarginMillimeter"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AlternateEnding/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/AlternateEnding/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/AutoLetRing/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/AutoLetRing/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Copyright/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuplet/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Tuplet/size"))), 8.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Copyright1/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFontText()", stylesheet.Raw.get_Item("Global/Font/Copyright1/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BarIndex/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/BarIndex/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Header/DrawTitle"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Header/DrawTitle"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Pop/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Pop/size"))), 4.800049000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Small/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Small/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slap/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Slap/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretStringText/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SlashFretStringText/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Rasgueado/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Rasgueado/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/PageNumber/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/PageNumber/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Staff/drawLyricsUpside"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Staff/drawLyricsUpside"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/OddFooter/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/OddFooter/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretStringText/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Arial", stylesheet.Raw.get_Item("Global/Font/SlashFretStringText/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SoundAutomation/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SoundAutomation/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Multirest/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Multirest/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Title/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Title/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/BendsLabel/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/BendsLabel/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackName/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(true, stylesheet.Raw.get_Item("Global/Font/TrackName/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Lyric/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Lyric/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Artist/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/Artist/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Tuplet/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Tuplet/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SmallFret/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SmallFret/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretString/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("@musicalFont()", stylesheet.Raw.get_Item("Global/Font/SlashFretString/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/VerticalTrackName/name"));
        alphaTab.test.Assert.AreEqual_T1_T22("Times New Roman", stylesheet.Raw.get_Item("Global/Font/VerticalTrackName/name"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Album/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Album/italic"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Slap/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/Slap/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/Small/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/Small/size"))), 4.799927000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/TrackShortName/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/TrackShortName/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/SlashFretStringText/bold"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/SlashFretStringText/bold"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/FreeText/size"));
        alphaTab.test.Assert.IsTrue(alphaTab.platform.Platform.IsAlmostEqualTo((cast(stylesheet.Raw.get_Item("Global/Font/FreeText/size"))), 2.000000000));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/WordsAndMusic/proportionnal"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/WordsAndMusic/proportionnal"));
        alphaTab.test.Assert.IsTrue(stylesheet.Raw.ContainsKey("Global/Font/EvenHeader/italic"));
        alphaTab.test.Assert.AreEqual_T1_T22(false, stylesheet.Raw.get_Item("Global/Font/EvenHeader/italic"));
    }

    public function new() 
    {
    }

}
