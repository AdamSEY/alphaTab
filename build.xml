<project name="alphaTab" default="haxe-js" basedir=".">
    <description>
        a buildfile for creating alphaTab releases
    </description>
    
	<!-- Main Properties -->
	<property name="bin" location="bin"/>
	<property name="lib" location="${bin}/lib/alphaTab"/>
	<property name="src" location="src"/>
	<property name="haxe-js" location="${lib}/alphaTab.js"/>
	<property name="haxe-cpp" location="cpp"/>
	<property name="release" location="releases"/>
	<property name="tools" location="tools"/>
	
	<!-- Java-Player Properties -->	
	<property name="player-base" location="subprojects/java-player"/>	
	<property name="player-src" location="${player-base}/src"/>	
	<property name="player-bin" location="${player-base}/bin"/>	
	<property name="player-jar" location="${lib}/alphaTab.jar"/>	

		
	<target name="global-init">
		<tstamp/>
	</target>
	  
	<!-- Java Player -->  
	<target name="java-player" depends="global-init">
		<!-- Create Build Directory -->
		<mkdir dir="${player-bin}" />

		<!-- Compile Sources -->
		<echo message="compiling midi player"/>
		<javac srcdir="${player-src}" destdir="${player-bin}" classpath="C:/Program Files/Java/jre6/lib/plugin.jar" />

		<!-- Package Jar -->
		<echo message="create midi player jar"/>
		<delete file="${player-jar}" />
		<jar jarfile="${player-jar}" basedir="${player-bin}"/>

		<!-- Remove Build Directory -->
		<delete dir="${player-bin}" />
	</target>	
	
	<!-- Haxe Builds -->
	<target name="haxe-js" depends="global-init">
		<delete file="${haxe-js}" />
        <exec executable="haxe">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-js" />
            <arg value="${haxe-js}" />
        </exec>
	</target>	

	<target name="haxe-cs" depends="global-init">
		<delete dir="cs" />
		<mkdir dir="cs" />
        <exec executable="haxe">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-cs" />
            <arg value="cs" />
        </exec>
	</target>	

    <!-- Js build using custom generator -->
    <target name="haxe-js2" depends="global-init">
		<delete dir="${lib}2" />
		<mkdir dir="${lib}2" />
        <exec executable="haxe">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-js" />
            <arg value="${lib}2" />

            <arg value="--macro" />
            <arg value="alphatab.AlphaTabJsGenerator.use()" />
        </exec>
	</target>	

    
	<target name="haxe-cpp" depends="global-init">
		<delete file="${haxe-cpp}" />
        <exec executable="haxe">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-cpp" />
            <arg value="${haxe-cpp}" />
        </exec>
	</target>	
    
	<target name="haxe-xml" depends="global-init">
		<delete file="test.xml" />
        <exec executable="haxe">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-xml" />
            <arg value="test.xml" />
        </exec>
	</target>	
  
	<!-- Release -->
	<target name="release-init" depends="java-player">
		<delete dir="${release}/${DSTAMP}" />
		<mkdir dir="${release}/${DSTAMP}" />
	</target>	
		
	<target name="release" depends="release-init">
		<echo message="copying release files to ${release}/${DSTAMP}"/>
		<!-- copy distribution files -->		
		<copy todir="${release}/${DSTAMP}" overwrite="true">
			<fileset dir="${bin}" excludes=".svn" />
		</copy>
		
		<!-- minify javascripts -->
		<echo message="minify alphaTab.js"/>
		<java jar="${tools}\compiler.jar" fork="true">
			<arg value="--compilation_level" />
			<arg value="SIMPLE_OPTIMIZATIONS" />
			
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/alphaTab.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/alphaTab.min.js" />
		</java>
        
		<echo message="minify jquery.alphaTab.js"/>
		<java jar="${tools}\compiler.jar" fork="true">		
			<arg value="--compilation_level" />
			<arg value="SIMPLE_OPTIMIZATIONS" />
			
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.min.js" />
		</java>
        
        <!-- Remove Web files from demo -->
        <echo message="deleting php files and .htaccess" />
        <delete>
            <fileset dir="${release}/${DSTAMP}/demo" includes="**/*.php" />
        </delete>
        <delete file="${release}/${DSTAMP}/demo/.htaccess" />
         
        <!-- Retrieve all samples from webserver -->
        <echo message="loading sample pages from webserver" />
        <foreach target="receiveSample" param="samplepath">
            <path>
                <fileset dir="${bin}/demo/samples" includes="**/*.php" />
            </path>
        </foreach>  
        
        		
		<!-- replace javascript include to minified javascript -->
		<echo message="refreshing sample files"/>
		<replace dir="${release}/${DSTAMP}" token="alphaTab.js" value="alphaTab.min.js">
			<include name="**/*.html" />		
			<include name="**/*.php" />		
		</replace>

	</target>

    <target name="receiveSample" depends="global-init">
        <basename property="samplename" file="${samplepath}"
          suffix=".php"/>       
        <echo message="loading sample ${samplename}" />
        <get src="http://haxedev/alphaTab/bin/demo/index.php?s=${samplename}.php"
            dest="${release}/${DSTAMP}/demo/${samplename}.html" />
            
    </target>
</project>
