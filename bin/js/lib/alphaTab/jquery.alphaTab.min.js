!function($){function buildTracksArray(value,score){var tracks=[];if($.isArray(value))for(var i=0;i<value.length;i++)value[i]>=0&&value[i]<score.tracks.length&&tracks.push(score.tracks[value[i]]);else if($.isNumeric(value)&&value>=0&&value<score.tracks.length)tracks.push(score.tracks[value]);else if($.isNumeric(value)&&-1==value)for(var i=0;i<score.tracks.length;i++)tracks.push(score.tracks[i]);else tracks.push(score.tracks[0]);return tracks}function scoreLoaded(context,score){try{context.trigger?context.trigger("loaded",score):context.element&&$(context.element).trigger("loaded",score),context.renderer.renderMultiple(buildTracksArray(context.settings.tracks,score))}catch(e){if(e instanceof Error)throw e;$.error(e)}}function init(options){return this.each(function(){var $this=$(this),data=$this.data("alphaTab");if(!data){var context={};if(context.element=this,context.settings=alphatab.Settings.fromJson(options),options&&options.tracks)context.settings.tracks=options.tracks;else if($this.data("tracks"))try{var data=$this.data("tracks");context.settings.tracks=$.isArray(data)?data:parseInt(data)}catch(e){context.settings.tracks=0}else context.settings.tracks=0;var contents=$.trim($this.text());if($this.html(""),"html5"==context.settings.engine||"default"==context.settings.engine){document.createElement("canvas"),context.canvas=$(document.createElement("canvas")),$(context.canvas).attr("width",context.settings.width).attr("height",context.settings.height).addClass("alphaTabSurface"),$this.append(context.canvas),context.canvas=context.canvas[0];var ie=alphatab.platform.js.JsFileLoader.getIeVersion();if(ie>=0&&9>ie){var fixElement_=function(el){var outerHTML=el.outerHTML,newEl=el.ownerDocument.createElement(outerHTML);if("/>"!=outerHTML.slice(-2)){for(var ns,tagName="/"+el.tagName;(ns=el.nextSibling)&&ns.tagName!=tagName;)ns.removeNode();ns&&ns.removeNode()}return el.parentNode.replaceChild(newEl,el),newEl};context.canvas=G_vmlCanvasManager.initElement(fixElement_(context.canvas))}}else context.canvas=$('<div class="alphaTabCanvasWrapper"></div>'),$this.append(context.canvas);context.renderer=new alphatab.rendering.ScoreRenderer(context.settings,context.canvas),context.renderer.addRenderFinishedListener(function(){$this.trigger("rendered")}),"svg"==context.settings.engine&&context.renderer.addRenderFinishedListener(function(){var canvas=context.renderer.canvas;context.canvas[0].innerHTML=canvas.toSvg(!0,"alphaTabSurface")}),$this.data("alphaTab",context),""!=contents?api.tex.apply(this,[contents]):""!=$this.data("file")&&null!=$this.data("file")&&alphatab.importer.ScoreLoader.loadScoreAsync($this.data("file"),function(score){scoreLoaded(context,score)},function(error){$.error(error)})}})}function load(url){var context=$(this).data("alphaTab");context||$.error("alphaTab not initialized!"),alphatab.importer.ScoreLoader.loadScoreAsync(url,function(score){scoreLoaded(context,score)},function(error){$.error(error)})}function tex(content){var context=$(this).data("alphaTab");context||$.error("alphaTab not initialized!");var score=null;try{var parser=new alphatab.importer.AlphaTexImporter,data=new haxe.io.BytesInput(haxe.io.Bytes.ofString(content));parser.init(data),score=parser.readScore()}catch(e){$.error(e)}null!=score&&scoreLoaded(context,score)}function tracks(tracks){var context=$(this).data("alphaTab");if(!tracks)return context.renderer.tracks;if(null!=context.renderer.tracks&&0!=context.renderer.tracks.length){var score=context.renderer.tracks[0].score;if(!(0>tracks||tracks>=score.tracks.length))try{context.renderer.render(score.tracks[tracks])}catch(e){if(e instanceof Error)throw e;$.error(e)}}}function score(){var context=$(this).data("alphaTab");return null==context.renderer.tracks||0==context.renderer.tracks.length?null:context.renderer.tracks[0].score}function renderer(){var context=$(this).data("alphaTab");return context.renderer}var api={};api.init=init,api.load=load,api.tex=tex,api.tracks=tracks,api.score=score,api.renderer=renderer,$.fn.alphaTab=function(method){return api[method]?api[method].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof method&&method?($.error("Method "+method+" does not exist on jQuery.alphaTab"),void 0):api.init.apply(this,arguments)},$.alphaTab={restore:function(selector){$(selector).empty().removeData("alphaTab")}}}(jQuery),document.write('<script type="text/vbscript">\nFunction VbAjaxLoader(method, fileName)\n	Dim xhr\n	Set xhr = CreateObject("Microsoft.XMLHTTP")\n\n	xhr.Open method, fileName, False\n\n	xhr.setRequestHeader "Accept-Charset", "x-user-defined"\n	xhr.send\n\n	Dim byteArray()\n\n	if xhr.Status = 200 Then\n		Dim byteString\n		Dim i\n\n		byteString=xhr.responseBody\n\n		ReDim byteArray(LenB(byteString))\n\n		For i = 1 To LenB(byteString)\n			byteArray(i-1) = AscB(MidB(byteString, i, 1))\n		Next\n	End If\n\n	VbAjaxLoader=byteArray\nEnd Function\n</script>');